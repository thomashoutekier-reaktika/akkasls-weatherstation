syntax = "proto3";

package be.reaktika.weatherstation.domain;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "akkaserverless/annotations.proto";

option java_outer_classname = "WeatherStationDomain";

// Describes how this domain relates to an event sourced entity
option (akkaserverless.file).event_sourced_entity = {
    name: "WeatherStation"
    entity_type: "weatherstation"
    state: "WeatherStationState"
    events: ["StationRegistered", "TemperaturesCelciusAdded", "WindspeedsAdded"]
};

message WeatherStationState {
    string station_id = 1;
    string station_name = 2;
    double latitude = 3;
    double longitude = 4;
}

//the commands
message StationRegistrationCommand {
    string station_id = 1 [(akkaserverless.field).entity_key = true];
    string station_name = 2;
    double latitude = 3;
    double longitude = 4;
}

message StationTemperatureCommand {
    string station_id = 1 [(akkaserverless.field).entity_key = true];
    repeated TemperatureMeasurements temp_measurements = 2;
}

message TemperatureMeasurements {
    google.protobuf.Timestamp measurement_time = 1;
    float temperature_celcius = 2;
}

message StationWindspeedCommand {
    string station_id = 1 [(akkaserverless.field).entity_key = true];
    repeated WindspeedMeasurement windspeed_measurements = 2;
}

message WindspeedMeasurement {
    google.protobuf.Timestamp measurement_time = 1;
    float windspeed_m_per_s = 2;
}

//the events
message StationRegistered {
    string station_id = 1;
    string station_name = 2;
    double latitude = 3;
    double longitude = 4;
}

message TemperaturesCelciusAdded {
    string station_id = 1;
    repeated Temperature temperature = 2;
}

message Temperature {
    google.protobuf.Timestamp measurement_time = 1;
    float temperature_celcius = 2;
}

message WindspeedsAdded {
    string station_id = 1;
    repeated Windspeed windspeed = 2;
}

message Windspeed {
    google.protobuf.Timestamp measurement_time = 1;
    float windspeed_m_per_s = 2;
}


service WeatherStationEntityService {
    option (akkaserverless.service) = {
        type : SERVICE_TYPE_ENTITY
        component : "be.reaktika.weatherstation.domain.WeatherStation"
    };

    rpc RegisterStation(StationRegistrationCommand) returns (google.protobuf.Empty);
    rpc PublishTemperatureReport(StationTemperatureCommand) returns (google.protobuf.Empty);
    rpc PublishWindspeedReport(StationWindspeedCommand) returns (google.protobuf.Empty);
}


