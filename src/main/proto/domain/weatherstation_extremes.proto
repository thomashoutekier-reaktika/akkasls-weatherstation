syntax = "proto3";

package be.reaktika.weatherstation.domain;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "domain/weatherstation_publish.proto";
import "akkaserverless/annotations.proto";
import "google/api/annotations.proto";

option java_outer_classname = "WeatherStationExtremesAggregation";

//state
enum AggregationType {
    EXTREMES = 0;
    COUNTRY = 1;
}

message Aggregations {
    WeatherStationExtremes extremes = 1;
}

message WeatherStationExtremes {
    TemperatureRecord maxTemperature = 1;
    TemperatureRecord minTemperature = 2;
    WindRecord windspeed = 3;
}

message TemperatureRecord {
    TemperatureMeasurement current = 1;
    TemperatureMeasurement previousRecord = 2;
}

message TemperatureMeasurement {
    string station_id = 1;
    double measuredTemperature = 2;
    google.protobuf.Timestamp measurementTime = 3;
}

message WindRecord {
    WinspeedMeasurement current = 1;
    WindRecord previousRecord = 2;
}

message WinspeedMeasurement {
    string station_id = 1;
    double measuredWindspeed = 2;
    google.protobuf.Timestamp measurementTime = 3;
}

//commands
message AddToAggregationCommand {
    AggregationType type = 1  [(akkaserverless.field).entity_key = true];
    WeatherStationData weatherdata = 2;
}


service WeatherStationAggregationService {
    option (akkaserverless.service) = {
        type : SERVICE_TYPE_ENTITY
        component : ".domain.Aggregations"
    };
    rpc RegisterData(AddToAggregationCommand) returns (google.protobuf.Empty);
}


