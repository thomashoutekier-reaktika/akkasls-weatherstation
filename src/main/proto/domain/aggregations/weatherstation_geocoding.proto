syntax = "proto3";
package be.reaktika.weatherstation.domain.geocoding;

option java_outer_classname = "GeoCodingModel";

import "domain/aggregations/weatherstation_aggregations.proto";
import "action/weatherstation_publish.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
import "kalix/annotations.proto";

message GeoCodingState {
  map<string,string> stationIdToCountry = 1;
}

//events
message CountryMeasurements {
  string country = 1;
  repeated be.reaktika.weatherstation.domain.aggregations.TemperatureMeasurement temperatures = 3;
  repeated be.reaktika.weatherstation.domain.aggregations.WindspeedMeasurement windspeeds = 4;
}



service GeoCodingEntityService {
  option (kalix.codegen) = {
    value_entity : {
      name : "be.reaktika.weatherstation.domain.geocoding.GeoCoding",
      entity_type : "geocodingentity"
      state : "be.reaktika.weatherstation.domain.geocoding.GeoCodingState"
    }
  };
  rpc RegisterData(be.reaktika.weatherstation.action.WeatherStationData) returns (google.protobuf.Empty);


}