syntax = "proto3";

package be.reaktika.weatherstation.domain.aggregations;

import "google/protobuf/empty.proto";
import "domain/aggregations/weatherstation_aggregations.proto";
import "akkaserverless/annotations.proto";

option java_outer_classname = "WeatherStationExtremesAggregation";

option (akkaserverless.file).value_entity = {
    name: "WeatherStationExtremes"
    entity_type: "weatherstationextremes"
    state: "WeatherStationExtremesState"
};

message WeatherStationExtremesState {
    TemperatureRecord maxTemperature = 1;
    TemperatureRecord minTemperature = 2;
    WindRecord windspeed = 3;
}

message TemperatureRecord {
    be.reaktika.weatherstation.domain.aggregations.TemperatureMeasurement current = 1;
    be.reaktika.weatherstation.domain.aggregations.TemperatureMeasurement previousRecord = 2;
}


message WindRecord {
    be.reaktika.weatherstation.domain.aggregations.WindspeedMeasurement current = 1;
    be.reaktika.weatherstation.domain.aggregations.WindspeedMeasurement previousRecord = 2;
}


service WeatherStationExtremesEntityService {
    option (akkaserverless.service) = {
        type : SERVICE_TYPE_ENTITY
        component : "be.reaktika.weatherstation.domain.aggregations.WeatherStationExtremes"
    };
    rpc RegisterData(be.reaktika.weatherstation.domain.aggregations.AddToAggregationCommand) returns (google.protobuf.Empty);
}


