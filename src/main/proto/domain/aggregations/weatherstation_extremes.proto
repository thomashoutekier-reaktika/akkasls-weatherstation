syntax = "proto3";

package be.reaktika.weatherstation.domain.aggregations;

import "google/protobuf/empty.proto";
import "domain/aggregations/weatherstation_aggregations.proto";
import "kalix/annotations.proto";

option java_outer_classname = "WeatherStationExtremesAggregation";


message WeatherStationExtremesState {
    TemperatureRecord maxTemperature = 1;
    TemperatureRecord minTemperature = 2;
    WindRecord windspeed = 3;
}

message TemperatureRecord {
    be.reaktika.weatherstation.domain.aggregations.TemperatureMeasurement current = 1;
    be.reaktika.weatherstation.domain.aggregations.TemperatureMeasurement previousRecord = 2;
}


message WindRecord {
    be.reaktika.weatherstation.domain.aggregations.WindspeedMeasurement current = 1;
    be.reaktika.weatherstation.domain.aggregations.WindspeedMeasurement previousRecord = 2;
}


service WeatherStationExtremesEntityService {
    option (kalix.codegen) = {
        value_entity : {
            name : "be.reaktika.weatherstation.domain.aggregations.WeatherStationExtremes",
            entity_type : "weatherstationextremes"
            state : "be.reaktika.weatherstation.domain.aggregations.WeatherStationExtremesState"
        }
    };
    rpc RegisterData(be.reaktika.weatherstation.domain.aggregations.AddToAggregationCommand) returns (google.protobuf.Empty);
}


